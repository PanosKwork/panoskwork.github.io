<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[android]]></title>
      <url>/2017/11/04/android/</url>
      <content type="html"><![CDATA[<h1 id="1-Android入门基础"><a href="#1-Android入门基础" class="headerlink" title="1.Android入门基础"></a>1.Android入门基础</h1><hr>
<h2 id="1-6数据保存"><a href="#1-6数据保存" class="headerlink" title="1.6数据保存"></a>1.6数据保存</h2><h3 id="1-6-1保存到文件"><a href="#1-6-1保存到文件" class="headerlink" title="1.6.1保存到文件"></a>1.6.1保存到文件</h3><h4 id="存储到内部还是外部"><a href="#存储到内部还是外部" class="headerlink" title="存储到内部还是外部"></a>存储到内部还是外部</h4><p>所有的Android设备都有两个文件存储区域：“internal”和“external”</p>
<ul>
<li><p>Internal storage:</p>
<ul>
<li><p>总是可用的</p>
</li>
<li><p>这里的文件默认只能被我们的APP所访问</p>
</li>
<li><p>当用户卸载APP时，系统会把internal内该APP相关的文件都清除干净</p>
</li>
<li><p>Internal是我们在想确保不被用户与其他APP所访问的最佳存储位置</p>
<p>​</p>
</li>
</ul>
</li>
<li><p>External storage:</p>
<ul>
<li>并不总是可用的，因为用户有时会通过USB存储模式挂载外部存储器，当取下挂载的这部分后，就无法对其进行访问了</li>
<li>是大家都可以访问的，因此保存在这里的文件可能被其他程序访问</li>
<li>当用户卸载我们的app时，系统仅仅会删除external根目录（<a href="http://developer.android.com/reference/android/content/Context.html#getExternalFilesDir(java.lang.String" target="_blank" rel="external">getExternalFilesDir()</a>)）下的相关文</li>
<li>External是在不需要严格的访问权限并且希望这些文件能够被其他app所共享或者是允许用户通过电脑访问时的最佳存储区域</li>
</ul>
</li>
</ul>
<h4 id="获取External存储权限"><a href="#获取External存储权限" class="headerlink" title="获取External存储权限"></a>获取External存储权限</h4><p> <code>&lt;uses-permission android name=&quot;android.perimission.WRITE_EXTERNAL_STORAGE&quot;&gt;</code></p>
<blockquote>
<p>如果已经声明了此权限，则默认也声明了READ_EXTERNAL_STORAGE  </p>
</blockquote>
<h4 id="保存到internal-storage"><a href="#保存到internal-storage" class="headerlink" title="保存到internal storage"></a>保存到internal storage</h4><ul>
<li><p>获取目录作为FILE的对象</p>
<ul>
<li>getFileDir():返回一个File，代表了APP的internal目录</li>
<li>getCache():返回一个File,代表了APP的internal缓存目录</li>
</ul>
</li>
<li><p>执行openFileOutput()获取一个FileOutputStream用于写文件到internal目录，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FileOutputStream outputStream = openFileOutput(filename,CONTEXT.MODE_PRIVATE);</div><div class="line">outputStream.write();</div><div class="line">outputStream.close();<span class="comment">//一定记得调用close</span></div></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>利用creatTempFile()缓存文件</p>
<p><code>File file = Fiel.creatTempFile(fileName,null,context.getCacheDir());</code></p>
<p>​</p>
</li>
</ul>
<h4 id="保存文件到External-stroage"><a href="#保存文件到External-stroage" class="headerlink" title="保存文件到External stroage"></a>保存文件到External stroage</h4><ul>
<li><p>通过getExternalStorageState()检验external storage是否可用,返回MEDIA_MOUNTED则可读写</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Check if ecternal storage is available for read and write</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isExternalStorageWriteable</span><span class="params">()</span></span>&#123;</div><div class="line">	String state = Environment.getExternalStorageState();</div><div class="line">	<span class="keyword">if</span>(Enviroment.MEDIA_MOUNTED.equals(state))&#123;</div><div class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Check if external storage is available to at least read</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isExternalStorageReadable</span><span class="params">()</span></span>&#123;</div><div class="line">	String state = Environment.getExternalStorageState();</div><div class="line">	<span class="keyword">if</span>(Environment.MEDIA_MOUNTED.equals(state) || </div><div class="line">	   Environment.MEDIA_MOUNTED_READ_ONLY.equals(state))&#123;</div><div class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;     </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>​</p>
<p>​</p>
</li>
<li><p>一般步骤</p>
<ul>
<li><p>声明读写权限</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;uses-permission android:name = <span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>&gt;</div></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>动态请求权限(CompileSdkVersion在23以上的需要)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ActivityCompat.requestPermission(<span class="keyword">this</span>,<span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;)</div></pre></td></tr></table></figure>
<p>​</p>
</li>
<li><p>存储数据</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//创建文件夹</span></div><div class="line">File dir = <span class="keyword">new</span> File(Environment.getExternalStorageDirectory(),<span class="string">"skypan"</span>);</div><div class="line"><span class="keyword">if</span>(!dir.exists())&#123;</div><div class="line">  dir.mkdirs();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//创建文件</span></div><div class="line">File file = <span class="keyword">new</span> File(dir,fileName);</div><div class="line"><span class="keyword">if</span>(!file.exits())&#123;</div><div class="line">  file.creatNewFile();</div><div class="line">&#125;</div><div class="line">fileOutputStream = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line"></div><div class="line"><span class="comment">//读取数据</span></div><div class="line">File file = <span class="keyword">new</span> File(Environment.getExternalStorageDirectory()+File.seperator+<span class="string">"skypan"</span>,fileName);</div><div class="line">fileInputStream = <span class="keyword">new</span> FileInputStream(file);</div><div class="line"><span class="comment">//其他操作同存储数据</span></div></pre></td></tr></table></figure>
<p>​</p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>通过FileOutputStream对象构建OutputStream对象，再通过OutputStream对象构建BufferedWriter对象，最后再调用write()和close()方法</p>
</blockquote>
<ul>
<li>External Storage中文件保存类型<ul>
<li>Public files：这些文件对于用户与其他app来说都是public的，当用户卸载我们的app时，这些文件应该保留。例如，那些被我们的app拍摄的图片或者下载的文件。<ul>
<li>通过执行getExternalStoragePublicDirectory(DIRECTORY_MUSIC或者DIRCTORY_PICTURES)来获取一个File对象</li>
</ul>
</li>
<li>Private files：这些文件完全被我们的app所私有，它们应该在app被卸载时删除。尽管由于存储在external storage，那些文件从技术上而言可以被用户与其他app所访问，但实际上那些文件对于其他app没有任何意义。因此，当用户卸载我们的app时，系统会删除其下的private目录。例如，那些被我们的app下载的缓存文件。<ul>
<li>通过执行getExternalFilesDir()来获取相应的目录</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="从文件中读取数据"><a href="#从文件中读取数据" class="headerlink" title="从文件中读取数据"></a>从文件中读取数据</h4><p><strong>openFileInput()、StringBuilder()</strong></p>
<ul>
<li>通过FileInputStream对象构建InputStreamReader对象，再通过InputStreamReader对构建BufferdReader对象 </li>
<li>通过StringBuilder().append()来拼接字符串</li>
</ul>
<h3 id="1-6-2保存到perference"><a href="#1-6-2保存到perference" class="headerlink" title="1.6.2保存到perference"></a>1.6.2保存到perference</h3><h3 id="1-6-3保存到数据库"><a href="#1-6-3保存到数据库" class="headerlink" title="1.6.3保存到数据库"></a>1.6.3保存到数据库</h3><h4 id="SQLite数据库"><a href="#SQLite数据库" class="headerlink" title="SQLite数据库"></a>SQLite数据库</h4><p>  SQLite数据库是android系统自带的，主要用到的类包括SQLiteOpenHelper和SQLiteDatabase。      </p>
<ul>
<li><p>SQLiteOpenHelper：创建数据库和数据库版本管理的辅助类，该类是一个抽象类，所以我们一般都有一个子类SQLiteOpenHelper，需要继承实现的方法主要有onCreate()、onUpgrade()、getWritableDatabase()等。getWritableDatabase()方法返回的是SQLiteDatabase对象实例，如果数据库尚未创建，则会自动调用onCreate()方法来创建数据库，所以一些建表和数据初始化操作，应该放在onCreate()方法里 。 </p>
</li>
<li><p>SQLiteDatabase：操作SQLite数据库的类，可以进行SQL语句，对数据库进行增、删、改、查的操作，该对象已经对基本的数据库操作进行了封装。可以调用insert()、delete()、update()、select()等方法，进行实际的数据库操作 ，这个类相当于JDBC中的Connection，也类似Hibernate中的Session，或者Spring中的HibernateTemplate；也可以进行transaction的控制。很多对数据库的操作最终都是通过SQLiteDatabase实例来调用执行的。        注意：数据库对于一个应用时私有的，并且在一个应用当中，数据库的名字也是唯一的。</p>
<ul>
<li>insert(“Book”,null,values)     //参数1：表名；    参数2：用于在未指定添加呢数据的情况下给某些可为空的列自动赋值NULL，一般用不到，直接传入null即可；    参数3：是一个ContentValues对象，它提供了一系列的put()方法重载，用于向ContentValues中添加数据，只需要将表中的每个列名以及相应的待添加数据传入即可。</li>
<li>delete(“Book”,”pages &gt; ?”,new String[]{“500”})    //参数1：表名；    参数2和参数3：用于约束删除某一行或某几行的数据，不指定的话默认就是删除所有行。此处意思为“仅删除页数超过500页的书”。</li>
<li>update(“Book”,values,”name = ?”,new String[]{“The Da Vinci code”})   //参数1：表名；  参数2和参数3：用于约束更新某一行或某几行中的数据，不指定的话默认就是更新所有行。此处意思为(注：前文 有values.put(“price”,10.99))“将名字为The Da Vinci Code的这本书的价格改成10.99”。</li>
</ul>
</li>
<li><p>Corsor：游标。通过Cursor可以对于从数据库中查询出来的结果集进行随机的读写访问。对于数据库的查询结果，一般是由子类SQLiteCursor返回的。        <strong>特别注意：</strong>开发的时候一般会对前面两个类做一下包装，比如进行简单的封装，使得SQLiteDatabase的查询方法不是返回原始的Cursor类（Cursor相当于JDBC中的ResultSet），而是返回业务对象等等</p>
<p>​</p>
</li>
</ul>
<p>SQLiteOpenHelper类的实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.sql;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</div><div class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase.CursorFactory;</div><div class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataBaseHelpler</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span></span>&#123;</div><div class="line">    <span class="comment">//数据库版本号</span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VERSION = <span class="number">1</span>;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DataBaseHelpler</span><span class="params">(Context context, String name, CursorFactory factory,</span></span></div><div class="line"><span class="function"><span class="params">      <span class="keyword">int</span> version)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>(context, name, factory, version);</div><div class="line">    <span class="comment">// TODO Auto-generated constructor stub</span></div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DataBaseHelpler</span><span class="params">(Context context,String name)</span></span>&#123;</div><div class="line">    <span class="keyword">this</span>(context,name,VERSION);</div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DataBaseHelpler</span><span class="params">(Context context, String name,<span class="keyword">int</span> version)</span></span>&#123;</div><div class="line">    <span class="keyword">this</span>(context, name, <span class="keyword">null</span>, version);</div><div class="line">  &#125;</div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</div><div class="line">    <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">    System.out.println(<span class="string">"creat database"</span>);</div><div class="line">    db.execSQL(<span class="string">"create table student(no int,name verchar(20))"</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</div><div class="line">    <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">    System.out.println(<span class="string">"upgrade database"</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>SQLite类的实现：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.sql;</div><div class="line"><span class="keyword">import</span> android.app.Activity;</div><div class="line"><span class="keyword">import</span> android.content.ContentValues;</div><div class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SQLiteActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line">  <span class="comment">/** Called when the activity is first created. */</span></div><div class="line">  <span class="keyword">private</span> Button button_create,</div><div class="line">          button_upgreate,</div><div class="line">          button_insert,</div><div class="line">          button_up,</div><div class="line">          button_query,</div><div class="line">          button_delete;</div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    setContentView(R.layout.main);</div><div class="line">    button_create = (Button) findViewById(R.id.button1);</div><div class="line">    button_upgreate = (Button) findViewById(R.id.button2);</div><div class="line">    button_insert = (Button) findViewById(R.id.button3);</div><div class="line">    button_up = (Button) findViewById(R.id.button4);</div><div class="line">    button_query = (Button) findViewById(R.id.button5);</div><div class="line">    button_delete = (Button) findViewById(R.id.button6);</div><div class="line">    <span class="comment">//创建数据库</span></div><div class="line">    button_create.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">        DataBaseHelpler dbh = <span class="keyword">new</span> DataBaseHelpler(SQLiteActivity.<span class="keyword">this</span>,<span class="string">"tabel_one"</span>);</div><div class="line">        SQLiteDatabase sql = dbh.getReadableDatabase();</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">//更新数据库</span></div><div class="line">    button_upgreate.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">        DataBaseHelpler dbh = <span class="keyword">new</span> DataBaseHelpler(SQLiteActivity.<span class="keyword">this</span>,<span class="string">"tabel_one"</span>,<span class="number">2</span>);</div><div class="line">        SQLiteDatabase sql = dbh.getReadableDatabase();</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">//向数据库中的表中插入内容</span></div><div class="line">    button_insert.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">        ContentValues values = <span class="keyword">new</span> ContentValues();</div><div class="line">        values.put(<span class="string">"no"</span>, <span class="number">123</span>);</div><div class="line">        values.put(<span class="string">"name"</span>, <span class="string">"zhangsan"</span>);</div><div class="line">        DataBaseHelpler dbh = <span class="keyword">new</span> DataBaseHelpler(SQLiteActivity.<span class="keyword">this</span>,<span class="string">"tabel_one"</span>,<span class="number">2</span>);</div><div class="line">        SQLiteDatabase sql = dbh.getReadableDatabase();</div><div class="line">        <span class="comment">//第三个参数为ContentValues对象，它提供了一系列put()方法重载，用于向ContentValues中添加数据</span></div><div class="line">        <span class="comment">//只需要将表中的每个列名以及相对应的大添加数据传入即可</span></div><div class="line">        sql.insert(<span class="string">"tabel_one"</span>, <span class="keyword">null</span>, values);</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">//更新表的内容</span></div><div class="line">    button_up.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="comment">// TODO Auto-generated method stub</span></div><div class="line">        DataBaseHelpler dbh = <span class="keyword">new</span> DataBaseHelpler(SQLiteActivity.<span class="keyword">this</span>,<span class="string">"tabel_one"</span>);</div><div class="line">        SQLiteDatabase sql = dbh.getReadableDatabase();</div><div class="line">        ContentValues values = <span class="keyword">new</span> ContentValues();</div><div class="line">        values.put(<span class="string">"name"</span>, <span class="string">"wangwu"</span>);</div><div class="line">        sql.update(<span class="string">"tabel_one"</span>, values, <span class="string">"id=[]&#123;"</span><span class="number">1</span><span class="string">"&#125;);</span></div><div class="line"><span class="string">      &#125;</span></div><div class="line"><span class="string">    &#125;);</span></div><div class="line"><span class="string">    //查找表的内容</span></div><div class="line"><span class="string">    button_query.setOnClickListener(new OnClickListener() &#123;</span></div><div class="line"><span class="string">      public void onClick(View v) &#123;</span></div><div class="line"><span class="string">        // TODO Auto-generated method stub</span></div><div class="line"><span class="string">      &#125;</span></div><div class="line"><span class="string">    &#125;);</span></div><div class="line"><span class="string">    //删除</span></div><div class="line"><span class="string">    button_delete.setOnClickListener(new OnClickListener() &#123;</span></div><div class="line"><span class="string">      public void onClick(View v) &#123;</span></div><div class="line"><span class="string">        // TODO Auto-generated method stub</span></div><div class="line"><span class="string">      &#125;</span></div><div class="line"><span class="string">    &#125;);</span></div><div class="line"><span class="string">  &#125;</span></div><div class="line"><span class="string">&#125;</span></div></pre></td></tr></table></figure>
<h1 id="Android分享操作"><a href="#Android分享操作" class="headerlink" title="Android分享操作"></a>Android分享操作</h1><h1 id="Android多媒体"><a href="#Android多媒体" class="headerlink" title="Android多媒体"></a>Android多媒体</h1><h1 id="Android图像与动画"><a href="#Android图像与动画" class="headerlink" title="Android图像与动画"></a>Android图像与动画</h1><h1 id="Android网络连接与云服务"><a href="#Android网络连接与云服务" class="headerlink" title="Android网络连接与云服务"></a>Android网络连接与云服务</h1><h1 id="Android联系人与位置信息"><a href="#Android联系人与位置信息" class="headerlink" title="Android联系人与位置信息"></a>Android联系人与位置信息</h1><h1 id="Android交互设计"><a href="#Android交互设计" class="headerlink" title="Android交互设计"></a>Android交互设计</h1><h1 id="Android界面设计"><a href="#Android界面设计" class="headerlink" title="Android界面设计"></a>Android界面设计</h1><h1 id="Android用户输入"><a href="#Android用户输入" class="headerlink" title="Android用户输入"></a>Android用户输入</h1><h1 id="Android后台任务"><a href="#Android后台任务" class="headerlink" title="Android后台任务"></a>Android后台任务</h1><h1 id="Android性能优化"><a href="#Android性能优化" class="headerlink" title="Android性能优化"></a>Android性能优化</h1><h1 id="Android安全与隐患"><a href="#Android安全与隐患" class="headerlink" title="Android安全与隐患"></a>Android安全与隐患</h1><h1 id="Android测试程序"><a href="#Android测试程序" class="headerlink" title="Android测试程序"></a>Android测试程序</h1>]]></content>
      
        <categories>
            
            <category> -学习 -code </category>
            
        </categories>
        
        
        <tags>
            
            <tag> -android </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[分类]]></title>
      <url>/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[links]]></title>
      <url>/links/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[notes]]></title>
      <url>/notes/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[pictures]]></title>
      <url>/pictures/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[ALL tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
